AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Greeting:
    Description: Greeting text for the custom resource
    Type: String
    Default: 'Hello World'

Resources:
  Greetings:
    Type: "AWS::CloudFormation::CustomResource"
    Properties:
      ServiceToken: !GetAtt Function.Arn
      FunctionName: !Ref Function
      Greeting: !Ref Greeting
  Function:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          const response = require('cfn-response');
          exports.handler = async (event, context) => {
            console.log('Event: ' + JSON.stringify(event));

            try {
              const greeting = event.ResourceProperties.Greeting;
              let responseData = {};

              if (event.RequestType === 'Create') {
                  responseData = {Greeting: greeting, Message: 'Resource created'};
                  await response.send(event, context, response.SUCCESS, responseData);
                  return;
              } else if (event.RequestType === 'Update') {
                  responseData = {Greeting: greeting, Message: 'Resource updated'};
                  await response.send(event, context, response.SUCCESS, responseData);
                  return;
              } else if (event.RequestType === 'Delete') {
                  responseData = {Greeting: greeting, Message: 'Resource deleted'};
                  await response.send(event, context, response.SUCCESS);
                  return;
              } else {
                  await response.send(event, context, response.FAILED);
                  return;
              }
            } catch (err) {
              console.log(err);
              response.send(event, context, response.FAILED);
              return err;
            }
          };
      Handler: index.handler
      Role: !GetAtt FunctionRole.Arn
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 8

  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: LoggingPermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'

Outputs:
  Greetings:
    Value: !GetAtt Greetings.Greeting
  Message:
    Value: !GetAtt Greetings.Message